FROM alpine AS chef 

RUN apk update 
RUN apk add --no-cache \
        g++ \
        cmake \
        curl \
        file \
        musl-dev \
        pkgconf \
        unzip \
        clang 
RUN ln -s "/usr/bin/g++" "/usr/bin/musl-g++"
ENV RUSTUP_HOME=/opt/rust/rustup \
    PATH=/home/root/.cargo/bin:/opt/rust/cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
RUN curl https://sh.rustup.rs -sSf | \
    env CARGO_HOME=/opt/rust/cargo \
        sh -s -- -y --default-toolchain stable --profile minimal --no-modify-path && \
    env CARGO_HOME=/opt/rust/cargo \
        rustup component add rustfmt && \
    env CARGO_HOME=/opt/rust/cargo \
        rustup target add x86_64-unknown-linux-musl
RUN env CARGO_HOME=/opt/rust/cargo cargo install cargo-chef && \
    rm -rf /opt/rust/cargo/registry/
ENV PG_CONFIG_X86_64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config \
    PKG_CONFIG_ALLOW_CROSS=true \
    PKG_CONFIG_ALL_STATIC=true \
    TARGET=musl
WORKDIR /app

FROM chef AS planner
COPY Cargo.toml .
COPY Cargo.lock .
COPY src/ src/
COPY resources/ resources/
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder 
COPY --from=planner /app/recipe.json recipe.json
RUN cargo chef cook --release --target x86_64-unknown-linux-musl --recipe-path recipe.json
COPY . .
RUN cargo build --target x86_64-unknown-linux-musl --release

FROM scratch AS runtime

COPY --from=builder /app/target/x86_64-unknown-linux-musl/stalwart-jmap /usr/bin/stalwart-jmap
RUN addgroup -S stalwart-jmap && adduser -S stalwart-jmap -G stalwart-jmap
RUN mkdir -p /var/lib/stalwart-jmap
RUN mkdir -p /etc/stalwart-jmap
RUN chown stalwart-jmap:stalwart-jmap /var/lib/stalwart-jmap
RUN chown stalwart-jmap:stalwart-jmap /etc/stalwart-jmap

USER stalwart-jmap

ENTRYPOINT ["/usr/bin/stalwart-jmap"]
